image: ruby:2.4.2

stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'

before_script:
#  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#  - eval $(ssh-agent -s)
#  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/docker-user
  - echo "$SSH_PUBLIC_KEY" > ~/.ssh/docker-user.pub
#  - cd reddit
#  - bundle install

# build_job:
#   stage: build
#   script:
#     - echo 'Building'
# 
# test_unit_job:
#   stage: test
#   services:
#     - mongo:latest
#   script:
#     - ruby simpletest.rb
# 
# test_integration_job:
#   stage: test
#   script:
#     - echo 'Testing 2'
# 
# deploy_dev_job:
#   stage: review
#   script:
#     - echo 'Deploy'
#   environment:
#     name: dev
#     url: http://dev.example.com

branch_start_review:
  stage: review
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    url: http://$CI_COMMIT_REF_SLUG.example.com
    on_stop: branch_stop_review
  only:
    - branches
  except:
    - master
  image:
    name: hashicorp/terraform:light
    entrypoint: [""]
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: "${CI_PROJECT_DIR}/gcp-credentials.json"
  script:
    - gitlab-ci/deploy-review-host.sh

branch_stop_review:
  stage: review
  when: manual
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    url: http://$CI_COMMIT_REF_SLUG.example.com
    action: stop
  only:
    - branches
  except:
    - master
  image:
    name: hashicorp/terraform:light
    entrypoint: [""]
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: "${CI_PROJECT_DIR}/gcp-credentials.json"
  before_script:
    - gitlab-ci/setup-ssh.sh
  script:
    - gitlab-ci/remove-review-host.sh

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: https://example.com
