image: ruby:2.4.2

stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'
  DEPLOY_REVIEW_HOST_CMD: 'docker run \
  -e GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json \
  -e GCP_PROJECT=${GCP_PROJECT} \
  --mount type=bind,source="$(pwd)",target=/app \
  --mount type=bind,source="${HOME}"/.ssh,target=/root/.ssh \
  --workdir /app \
  --entrypoint /app/gitlab-ci/${REVIEW_ACTION} \
  -t hashicorp/terraform:light'

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/docker-user
  - echo "$SSH_PUBLIC_KEY" > ~/.ssh/docker-user.pub
  - cd reddit
  - bundle install

build_job:
  stage: build
  script:
    - echo 'Building'

test_unit_job:
  stage: test
  services:
    - mongo:latest
  script:
    - ruby simpletest.rb

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: http://dev.example.com

branch_review:
  stage: review
  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    url: http://$CI_COMMIT_REF_SLUG.example.com
  only:
    - branches
  except:
    - master
  variables:
    REVIEW_ACTION: deploy-review-host.sh
  script:
    - cd "${CI_PROJECT_DIR}"
    - echo "${GOOGLE_CREDENTIALS}" > gcp-credentials.json
    - eval ${DEPLOY_REVIEW_HOST_CMD}

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: https://example.com
